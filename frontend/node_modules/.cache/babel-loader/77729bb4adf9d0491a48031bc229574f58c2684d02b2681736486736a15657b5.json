{"ast":null,"code":"var _jsxFileName = \"/Users/alexsmola/udemy React - The Complete Guide /12-adv-starting-project/frontend/src/App.js\";\n// Challenge / Exercise\n\n// 1. Add five new (dummy) page components (content can be simple <h1> elements)\n//    - HomePage\n//    - EventsPage\n//    - EventDetailPage\n//    - NewEventPage\n//    - EditEventPage\n// 2. Add routing & route definitions for these five pages\n//    - / => HomePage\n//    - /events => EventsPage\n//    - /events/<some-id> => EventDetailPage\n//    - /events/new => NewEventPage\n//    - /events/<some-id>/edit => EditEventPage\n// 3. Add a root layout that adds the <MainNavigation> component above all page components\n// 4. Add properly working links to the MainNavigation\n// 5. Ensure that the links in MainNavigation receive an \"active\" class when active\n// 6. Output a list of dummy events to the EventsPage\n//    Every list item should include a link to the respective EventDetailPage\n// 7. Output the ID of the selected event on the EventDetailPage\n// BONUS: Add another (nested) layout route that adds the <EventNavigation> component above all /events... page components\n\nimport { RouterProvider, createBrowserRouter } from 'react-router-dom';\nimport RootLayout from './components/Layout/RootLayout';\nimport ErrorPage from './components/Pages/ErrorPage';\nimport HomePage from './components/Pages/HomePage';\nimport EventsLayout from './components/Layout/EventsLayout';\nimport EventsList from './components/EventsList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DUMMY_EVENTS = [{\n  id: 'e1',\n  title: 'A dummy event1',\n  date: '2023-02-22',\n  image: 'https://blog.hubspot.de/hubfs/Germany/Blog_images/Optimize_Marketing%20Events%20DACH%202021.jpg',\n  description: 'Join this amazing event and connect with fellow developers.'\n}, {\n  id: 'e2',\n  title: 'A dummy event2',\n  date: '2023-02-22',\n  image: 'https://blog.hubspot.de/hubfs/Germany/Blog_images/Optimize_Marketing%20Events%20DACH%202021.jpg',\n  description: 'Join this amazing event and connect with fellow developers.'\n}, {\n  id: 'e3',\n  title: 'A dummy event3',\n  date: '2023-02-22',\n  image: 'https://blog.hubspot.de/hubfs/Germany/Blog_images/Optimize_Marketing%20Events%20DACH%202021.jpg',\n  description: 'Join this amazing event and connect with fellow developers.'\n}];\nconst router = createBrowserRouter([{\n  path: '/',\n  element: /*#__PURE__*/_jsxDEV(RootLayout, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 14\n  }, this),\n  errorElement: /*#__PURE__*/_jsxDEV(ErrorPage, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 19\n  }, this),\n  children: [{\n    index: true,\n    element: /*#__PURE__*/_jsxDEV(HomePage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 31\n    }, this),\n    errorElement: /*#__PURE__*/_jsxDEV(ErrorPage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 59\n    }, this)\n  }, {\n    path: 'events',\n    element: /*#__PURE__*/_jsxDEV(EventsLayout, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 18\n    }, this),\n    errorElement: /*#__PURE__*/_jsxDEV(ErrorPage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 23\n    }, this),\n    children: [{\n      path: '',\n      element: /*#__PURE__*/_jsxDEV(EventsList, {\n        events: DUMMY_EVENTS\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 41\n      }, this)\n    }]\n  }]\n}]);\nfunction App() {\n  /*#__PURE__*/_jsxDEV(EventForm, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 3\n  }, this);\n  return /*#__PURE__*/_jsxDEV(RouterProvider, {\n    router: router\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 10\n  }, this);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["RouterProvider","createBrowserRouter","RootLayout","ErrorPage","HomePage","EventsLayout","EventsList","jsxDEV","_jsxDEV","DUMMY_EVENTS","id","title","date","image","description","router","path","element","fileName","_jsxFileName","lineNumber","columnNumber","errorElement","children","index","events","App","EventForm","_c","$RefreshReg$"],"sources":["/Users/alexsmola/udemy React - The Complete Guide /12-adv-starting-project/frontend/src/App.js"],"sourcesContent":["// Challenge / Exercise\n\n// 1. Add five new (dummy) page components (content can be simple <h1> elements)\n//    - HomePage\n//    - EventsPage\n//    - EventDetailPage\n//    - NewEventPage\n//    - EditEventPage\n// 2. Add routing & route definitions for these five pages\n//    - / => HomePage\n//    - /events => EventsPage\n//    - /events/<some-id> => EventDetailPage\n//    - /events/new => NewEventPage\n//    - /events/<some-id>/edit => EditEventPage\n// 3. Add a root layout that adds the <MainNavigation> component above all page components\n// 4. Add properly working links to the MainNavigation\n// 5. Ensure that the links in MainNavigation receive an \"active\" class when active\n// 6. Output a list of dummy events to the EventsPage\n//    Every list item should include a link to the respective EventDetailPage\n// 7. Output the ID of the selected event on the EventDetailPage\n// BONUS: Add another (nested) layout route that adds the <EventNavigation> component above all /events... page components\n\nimport { RouterProvider, createBrowserRouter } from 'react-router-dom';\nimport RootLayout from './components/Layout/RootLayout';\nimport ErrorPage from './components/Pages/ErrorPage';\nimport HomePage from './components/Pages/HomePage';\nimport EventsLayout from './components/Layout/EventsLayout';\nimport EventsList from './components/EventsList';\n\nconst DUMMY_EVENTS = [\n  {\n    id: 'e1',\n    title: 'A dummy event1',\n    date: '2023-02-22',\n    image:\n      'https://blog.hubspot.de/hubfs/Germany/Blog_images/Optimize_Marketing%20Events%20DACH%202021.jpg',\n    description: 'Join this amazing event and connect with fellow developers.',\n  },\n  {\n    id: 'e2',\n    title: 'A dummy event2',\n    date: '2023-02-22',\n    image:\n      'https://blog.hubspot.de/hubfs/Germany/Blog_images/Optimize_Marketing%20Events%20DACH%202021.jpg',\n    description: 'Join this amazing event and connect with fellow developers.',\n  },\n  {\n    id: 'e3',\n    title: 'A dummy event3',\n    date: '2023-02-22',\n    image:\n      'https://blog.hubspot.de/hubfs/Germany/Blog_images/Optimize_Marketing%20Events%20DACH%202021.jpg',\n    description: 'Join this amazing event and connect with fellow developers.',\n  },\n];\n\nconst router = createBrowserRouter([\n  {\n    path: '/',\n    element: <RootLayout />,\n    errorElement: <ErrorPage />,\n    children: [\n      { index: true, element: <HomePage />, errorElement: <ErrorPage /> },\n      {\n        path: 'events',\n        element: <EventsLayout />,\n        errorElement: <ErrorPage />,\n        children: [{ path: '', element: <EventsList events={DUMMY_EVENTS} /> }],\n      },\n    ],\n  },\n]);\n\nfunction App() {\n  <EventForm />;\n  return <RouterProvider router={router}></RouterProvider>;\n}\n\nexport default App;\n"],"mappings":";AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASA,cAAc,EAAEC,mBAAmB,QAAQ,kBAAkB;AACtE,OAAOC,UAAU,MAAM,gCAAgC;AACvD,OAAOC,SAAS,MAAM,8BAA8B;AACpD,OAAOC,QAAQ,MAAM,6BAA6B;AAClD,OAAOC,YAAY,MAAM,kCAAkC;AAC3D,OAAOC,UAAU,MAAM,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjD,MAAMC,YAAY,GAAG,CACnB;EACEC,EAAE,EAAE,IAAI;EACRC,KAAK,EAAE,gBAAgB;EACvBC,IAAI,EAAE,YAAY;EAClBC,KAAK,EACH,iGAAiG;EACnGC,WAAW,EAAE;AACf,CAAC,EACD;EACEJ,EAAE,EAAE,IAAI;EACRC,KAAK,EAAE,gBAAgB;EACvBC,IAAI,EAAE,YAAY;EAClBC,KAAK,EACH,iGAAiG;EACnGC,WAAW,EAAE;AACf,CAAC,EACD;EACEJ,EAAE,EAAE,IAAI;EACRC,KAAK,EAAE,gBAAgB;EACvBC,IAAI,EAAE,YAAY;EAClBC,KAAK,EACH,iGAAiG;EACnGC,WAAW,EAAE;AACf,CAAC,CACF;AAED,MAAMC,MAAM,GAAGd,mBAAmB,CAAC,CACjC;EACEe,IAAI,EAAE,GAAG;EACTC,OAAO,eAAET,OAAA,CAACN,UAAU;IAAAgB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;EACvBC,YAAY,eAAEd,OAAA,CAACL,SAAS;IAAAe,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;EAC3BE,QAAQ,EAAE,CACR;IAAEC,KAAK,EAAE,IAAI;IAAEP,OAAO,eAAET,OAAA,CAACJ,QAAQ;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;IAAEC,YAAY,eAAEd,OAAA,CAACL,SAAS;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAE,CAAC,EACnE;IACEL,IAAI,EAAE,QAAQ;IACdC,OAAO,eAAET,OAAA,CAACH,YAAY;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;IACzBC,YAAY,eAAEd,OAAA,CAACL,SAAS;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;IAC3BE,QAAQ,EAAE,CAAC;MAAEP,IAAI,EAAE,EAAE;MAAEC,OAAO,eAAET,OAAA,CAACF,UAAU;QAACmB,MAAM,EAAEhB;MAAa;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAE,CAAC;EACxE,CAAC;AAEL,CAAC,CACF,CAAC;AAEF,SAASK,GAAGA,CAAA,EAAG;EACb,aAAAlB,OAAA,CAACmB,SAAS;IAAAT,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;EACb,oBAAOb,OAAA,CAACR,cAAc;IAACe,MAAM,EAAEA;EAAO;IAAAG,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAiB,CAAC;AAC1D;AAACO,EAAA,GAHQF,GAAG;AAKZ,eAAeA,GAAG;AAAC,IAAAE,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}